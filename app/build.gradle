apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "tsou.cn.myaroutertest"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 1
        versionName "1.0.${new Date().format("MMddHH", TimeZone.getTimeZone("GMT+8"))}"

        // ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
//        debug {
//            keyAlias 'xiaoguo'
//            keyPassword '123456'
//            storeFile file("./keystore/arouter.jks")
//            storePassword '123456'
//        }

        release {
            keyAlias 'xiaoguo'
            keyPassword '123456'
            storeFile file("./keystore/arouter.jks")
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':lib_base')
    implementation project(path: ':lib_res')

    if (isNeedHomeModule.toBoolean()) {
        implementation project(':module_home')
    }
    if (isNeedChatModule.toBoolean()) {
        implementation project(':module_chat')
    }
    if (isNeedRecomModule.toBoolean()) {
        implementation project(':module_recom')
    }
    if (isNeedMeModule.toBoolean()) {
        implementation project(':module_mine')
    }

    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
}